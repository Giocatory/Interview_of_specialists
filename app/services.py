from google import genai
from google.genai import types
from app.config import settings

class GeminiService:
    def __init__(self):
        self.client = genai.Client(api_key=settings.GEMINI_API_KEY)
        self.model_name = settings.GEMINI_MODEL
    
    def generate_questions(self, position: str) -> list:
        prompt = f"""
        –¢—ã - —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π —Ä–µ–∫—Ä—É—Ç–µ—Ä. –°–≥–µ–Ω–µ—Ä–∏—Ä—É–π 10 —Å—Ç—Ä–æ–≥–∏—Ö —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –¥–ª—è —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è –Ω–∞ –ø–æ–∑–∏—Ü–∏—é {position}.
        –í–æ–ø—Ä–æ—Å—ã –¥–æ–ª–∂–Ω—ã –ø—Ä–æ–≤–µ—Ä—è—Ç—å:
        - –ì–ª—É–±–∏–Ω—É –∑–Ω–∞–Ω–∏–π —è–∑—ã–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π
        - –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –æ–ø—ã—Ç —Ä–∞–±–æ—Ç—ã
        - –ü–æ–Ω–∏–º–∞–Ω–∏–µ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –∏ best practices
        - –†–µ—à–µ–Ω–∏–µ —Ä–µ–∞–ª—å–Ω—ã—Ö –∑–∞–¥–∞—á
        
        –§–æ—Ä–º–∞—Ç: —Ç–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å—ã, –∫–∞–∂–¥—ã–π —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏, –±–µ–∑ –Ω–æ–º–µ—Ä–æ–≤, –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞.
        """
        
        try:
            response = self.client.models.generate_content(
                model=self.model_name,
                contents=prompt,
                config=types.GenerateContentConfig(
                    thinking_config=types.ThinkingConfig(thinking_budget=0)
                )
            )
            questions = [q.strip() for q in response.text.split('\n') if q.strip()]
            result = questions[:10] if len(questions) >= 10 else self._get_fallback_questions(position)
            print(f"‚úÖ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ {len(result)} –≤–æ–ø—Ä–æ—Å–æ–≤ –¥–ª—è –ø–æ–∑–∏—Ü–∏–∏ {position}")
            return result
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–æ–ø—Ä–æ—Å–æ–≤: {e}")
            return self._get_fallback_questions(position)
    
    def _get_fallback_questions(self, position: str) -> list:
        """Fallback –≤–æ–ø—Ä–æ—Å—ã –Ω–∞ —Å–ª—É—á–∞–π –æ—à–∏–±–∫–∏ API"""
        print("‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è fallback –≤–æ–ø—Ä–æ—Å—ã")
        return [
            f"–ö–∞–∫–∏–µ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∏ –≤—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –≤ —Ä–∞–±–æ—Ç–µ —Å {position}?",
            "–û–ø–∏—à–∏—Ç–µ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞, –Ω–∞–¥ –∫–æ—Ç–æ—Ä—ã–º —Ä–∞–±–æ—Ç–∞–ª–∏",
            "–ö–∞–∫ –≤—ã –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞?",
            "–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–∞–º–æ–º —Å–ª–æ–∂–Ω–æ–º —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–º –≤—ã–∑–æ–≤–µ –≤ –≤–∞—à–µ–π –∫–∞—Ä—å–µ—Ä–µ",
            "–ö–∞–∫ –≤—ã –æ–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ—Ç–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π?",
            "–ö–∞–∫–∏–µ —à–∞–±–ª–æ–Ω—ã –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—ã —á–∞—â–µ –≤—Å–µ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –∏ –ø–æ—á–µ–º—É?",
            "–ö–∞–∫ –≤—ã –æ—Ä–≥–∞–Ω–∏–∑—É–µ—Ç–µ —Ä–∞–±–æ—Ç—É —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –≤ —Å–≤–æ–∏—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö?",
            "–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ –≤–∞—à–µ–º –æ–ø—ã—Ç–µ —Ä–∞–±–æ—Ç—ã —Å —Å–∏—Å—Ç–µ–º–∞–º–∏ –∫–æ–Ω—Ç—Ä–æ–ª—è –≤–µ—Ä—Å–∏–π",
            "–ö–∞–∫ –≤—ã –ø–æ–¥—Ö–æ–¥–∏—Ç–µ –∫ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥—É legacy –∫–æ–¥–∞?",
            "–ö–∞–∫–∏–µ –º–µ—Ç–æ–¥—ã –≤—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ —Å–ª–æ–∂–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º?"
        ]
    
    def generate_feedback(self, position: str, questions: list, answers: list) -> str:
        print(f"üìä –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ñ–∏–¥–±—ç–∫–∞ –¥–ª—è –ø–æ–∑–∏—Ü–∏–∏: {position}")
        print(f"‚ùì –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–ø—Ä–æ—Å–æ–≤: {len(questions)}")
        print(f"‚úÖ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–≤–µ—Ç–æ–≤: {len(answers)}")
        
        if len(questions) != len(answers):
            error_msg = f"–û—à–∏–±–∫–∞: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–ø—Ä–æ—Å–æ–≤ ({len(questions)}) –∏ –æ—Ç–≤–µ—Ç–æ–≤ ({len(answers)}) –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞—á–∞—Ç—å —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ –∑–∞–Ω–æ–≤–æ."
            print(f"‚ùå {error_msg}")
            return error_msg
        
        qa_pairs = "\n".join([
            f"–í–û–ü–†–û–° {i+1}: {q}\n–û–¢–í–ï–¢ –ö–ê–ù–î–ò–î–ê–¢–ê: {a}\n" 
            for i, (q, a) in enumerate(zip(questions, answers))
        ])
        
        prompt = f"""
        –¢—ã - —Å—Ç–∞—Ä—à–∏–π —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç, –ø—Ä–æ–≤–æ–¥—è—â–∏–π –∞–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è –Ω–∞ –ø–æ–∑–∏—Ü–∏—é {position}.
        
        –í–û–ü–†–û–°–´ –ò –û–¢–í–ï–¢–´ –ö–ê–ù–î–ò–î–ê–¢–ê:
        {qa_pairs}
        
        –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –Ω–∞–≤—ã–∫–∏ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞ –∏ –¥–∞–π —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—É—é –æ—Ü–µ–Ω–∫—É –ø–æ —Å–ª–µ–¥—É—é—â–∏–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º:
        
        1. –¢–ï–•–ù–ò–ß–ï–°–ö–ê–Ø –ö–û–ú–ü–ï–¢–ï–ù–¢–ù–û–°–¢–¨:
           - –ó–Ω–∞–Ω–∏–µ —è–∑—ã–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π
           - –ü–æ–Ω–∏–º–∞–Ω–∏–µ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã—Ö –ø—Ä–∏–Ω—Ü–∏–ø–æ–≤
           - –û–ø—ã—Ç —Ä–µ—à–µ–Ω–∏—è –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞—á
        
        2. –°–ò–õ–¨–ù–´–ï –°–¢–û–†–û–ù–´:
           - –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –Ω–∞–≤—ã–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã–¥–µ–ª—è—é—Ç –∫–∞–Ω–¥–∏–¥–∞—Ç–∞
           - –ì–ª—É–±–∏–Ω–∞ –∑–Ω–∞–Ω–∏–π –≤ –∫–ª—é—á–µ–≤—ã—Ö –æ–±–ª–∞—Å—Ç—è—Ö
        
        3. –û–ë–õ–ê–°–¢–ò –î–õ–Ø –†–ê–ó–í–ò–¢–ò–Ø:
           - –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø—Ä–æ–±–µ–ª—ã –≤ –∑–Ω–∞–Ω–∏—è—Ö
           - –ù–∞–≤—ã–∫–∏, —Ç—Ä–µ–±—É—é—â–∏–µ —É–ª—É—á—à–µ–Ω–∏—è
           - –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –æ–±—É—á–µ–Ω–∏—é
        
        4. –ò–¢–û–ì–û–í–ê–Ø –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø:
           - –ì–æ—Ç–æ–≤ –ª–∏ –∫–∞–Ω–¥–∏–¥–∞—Ç –∫ –ø–æ–∑–∏—Ü–∏–∏ {position}
           - –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∑–∞ –∏ –ø—Ä–æ—Ç–∏–≤
           - –£—Ä–æ–≤–µ–Ω—å: Junior/Middle/Senior (–µ—Å–ª–∏ –ø—Ä–∏–º–µ–Ω–∏–º–æ)
        
        –ë—É–¥—å —Å—Ç—Ä–æ–≥–∏–º, –æ–±—ä–µ–∫—Ç–∏–≤–Ω—ã–º –∏ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–º. –û—Å–Ω–æ–≤—ã–≤–∞–π –æ—Ü–µ–Ω–∫—É —Ç–æ–ª—å–∫–æ –Ω–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –æ—Ç–≤–µ—Ç–∞—Ö.
        """
        
        try:
            response = self.client.models.generate_content(
                model=self.model_name,
                contents=prompt,
                config=types.GenerateContentConfig(
                    thinking_config=types.ThinkingConfig(thinking_budget=0)
                )
            )
            print("‚úÖ –§–∏–¥–±—ç–∫ —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω")
            return response.text
        except Exception as e:
            error_msg = f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ñ–∏–¥–±—ç–∫–∞: {str(e)}"
            print(f"‚ùå {error_msg}")
            return error_msg

gemini_service = GeminiService()